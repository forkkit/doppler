{"version":3,"sources":["input.js","utilities.js","code-getter.js","App.js","serviceWorker.js","index.js"],"names":["InputWrapper","styled","div","InputField","input","props","isDisabled","InputValue","InputLabel","label","InputRoot","Input","value","placeholder","onChange","color","prefix","sufix","withRgbSlider","min","max","rest","htmlFor","type","readOnly","tabIndex","getFontSizes","amount","base","increment","fontSizes","getName","inc","i","name","number","computedFS","Math","round","pow","document","documentElement","style","setProperty","CodeContainer","pre","CodeGetterButton","button","CodeBackdrop","CodeGetter","lineHeightBase","lineHeightRelativity","sizesIncrement","sizesAmount","baseFontSize","fontFamily","useState","isOpen","setIsOpen","Fragment","onClick","display","e","stopPropagation","reverse","map","size","join","SettingTitle","LogoSection","Logo","h1","LogoLink","a","GlobalContainer","SettingsSection","MainSettings","PreviewSettings","MainSection","DemoText","FontFamilyInput","Letter","variant","Link","DarkThemeButton","LightThemeButton","SpecsButtonWrapper","span","SpecsButtonLine","SpecsButtonSquare","SpecsButton","transform","left","top","text","l","s","App","setSizesAmount","setSizesIncrement","setBaseFontSize","setLineHeightBase","setLineHeightRelativity","setFontFamily","theme","setTheme","showSpecs","setShowSpecs","longContent","bodyClassList","body","classList","add","remove","target","onBlur","step","marginTop","spellCheck","fontSize","length","href","index","key","className","contentEditable","spellcheck","data-gramm_editor","suppressContentEditableWarning","lineHeight","maxWidth","marginBottom","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31420d96.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst InputWrapper = styled.div`\n  position: relative;\n  width: auto;\n  height: 100%;\n`\n\nconst InputField = styled.input`\n  color: inherit;\n  font-size: var(--dpl-fs-2);\n  font-family: inherit;\n  font-weight: inherit;\n  line-height: 1;\n  padding: 0;\n  border: 0;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  height: 100%;\n  background-color: transparent;\n  appearance: textfield;\n  margin: 0;\n  min-width: 0.25rem;\n  ${props => props.isDisabled && `\n    user-select: none;\n    opacity: 0.4;\n    pointer-events: none;\n  `};\n  &:hover {\n    color: hsla(var(--c-accentHSL), 1);\n  }\n  &:focus {\n    outline: none;\n    color: hsla(var(--c-accentHSL), 1);\n  }\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  &::-moz-selection {\n    background-color: hsla(var(--c-accentHSL), 1);\n    color: hsla(var(--c-accentHS), 93%, 1);\n  }\n  &::selection {\n    background-color: hsla(var(--c-accentHSL), 1);\n    color: hsla(var(--c-accentHS), 93%, 1);\n  }\n`\n\nconst InputValue = styled.div`\n  font-size: var(--dpl-fs-2);\n  font-weight: inherit;\n  line-height: 1;\n  opacity: 0;\n  transform: translateY(236px) scale(0);\n`\n\nconst InputLabel = styled.label`\n  margin-bottom: 0.1rem;\n  display: block;\n`\n\nconst InputRoot = styled.div`\n  display: flex;\n  margin: 0 0 0.8rem 0;\n  height: var(--dpl-fs-2);\n`\n\nconst Input = ({ value, placeholder, onChange, color, prefix, sufix, withRgbSlider, label, min, max, ...rest }) => {\n  return (\n    <div>\n      <InputLabel htmlFor={label}>\n        {label}\n      </InputLabel>\n\n      <InputRoot>\n        <InputWrapper color={color}>\n          <InputField color={color} value={prefix} placeholder={placeholder} type='text' readOnly isDisabled tabIndex={-1} />\n          <InputValue>\n            {prefix}\n          </InputValue>\n        </InputWrapper>\n\n        <InputWrapper color={color}>\n          <InputField color={color} value={value} placeholder={placeholder} onChange={onChange} {...rest} min={min} max={max} />\n          <InputValue>\n            {value}\n          </InputValue>\n        </InputWrapper>\n\n        <InputWrapper color={color}>\n          <InputField color={color} value={sufix} placeholder={placeholder} type='text' readOnly isDisabled tabIndex={-1} />\n          <InputValue>\n            {sufix}\n          </InputValue>\n        </InputWrapper>\n      </InputRoot>\n    </div>\n  )\n}\n\nexport default Input","export const getFontSizes = (amount, base, increment) => {\n  let fontSizes = [];\n\n  const getName = inc => {\n    return `fontSize-${inc}`;\n  };\n\n  for (var i = 1; i < amount; i++) {\n    fontSizes[i] = {\n      name: `--${getName(i)}`,\n      value: `calc(var(--${getName(i - 1)}) * var(--sizesIncrement))`,\n      number: i,\n      computedFS: Math.round(base * Math.pow(increment, i) * 16)\n    };\n  }\n\n\n  fontSizes[0] = {\n    name: `--${getName(0)}`,\n    value: `${base}rem`,\n    number: 0,\n    computedFS: Math.round(base * 16)\n  };\n\n  document.documentElement.style.setProperty('--sizesIncrement', increment);\n  \n  return fontSizes;\n};","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { getFontSizes } from './utilities'\n\nconst lineBreak = `\n`\n\nconst CodeContainer = styled.pre`\n  background-color: var(--background);\n  padding: var(--pagePaddingX);\n  overflow: auto;\n  max-height: 100%;\n`\n\nconst CodeGetterButton = styled.button`\n  appearance: none;\n  font: inherit;\n  color: inherit;\n  border: 1px solid hsla(var(--c-accentH), 40%, 40%, 0.5);\n  padding: 0.5rem 0.75rem;\n  cursor: pointer;\n  background-color: transparent;\n\n  &:focus {\n    border-color: hsla(var(--c-accentHSL), 1);\n    color: hsla(var(--c-accentHSL), 1);\n    outline: none;\n  }\n`\n\nconst CodeBackdrop = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 100;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  padding: var(--pagePaddingY) var(--pagePaddingX);\n  background-color: var(--backdrop);\n\n  @media (max-width: 800px) {\n    padding: 0;\n    padding-top: 40vw;\n  }\n`\n\nconst CodeGetter = ({lineHeightBase, lineHeightRelativity, sizesIncrement, sizesAmount, baseFontSize, fontFamily}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <React.Fragment>\n      <CodeGetterButton onClick={() => setIsOpen(!isOpen)}>Get CSS</CodeGetterButton>\n      \n      \n      <CodeBackdrop\n        style={{ display: `${isOpen ? 'flex' : 'none'}` }}\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <CodeContainer onClick={(e) => e.stopPropagation()}>\n          <code>\n              {`:root {\n  --lineHeightBase: ${lineHeightBase}rem;\n  --lineHeightRelativity: ${lineHeightRelativity}em;\n  --sizesIncrement: ${sizesIncrement};\n\n${getFontSizes(sizesAmount, baseFontSize, sizesIncrement)\n    .reverse()\n    .map((size) => {\n      return `  ${size.name}: ${size.value}; ${lineBreak}`\n    }).join('')}\n  --globalLineHeight: calc(var(--lineHeightBase) + var(--lineHeightRelativity));\n  --globalFontSize: var(--fontSize-0);\n  --globalFontFamily: ${fontFamily};\n}\nbody {\n  font-size: var(--globalFontSize);\n  line-height: var(--globalLineHeight);\n  font-family: var(--globalFontFamily);\n}\n${getFontSizes(sizesAmount, baseFontSize, sizesIncrement)\n  .reverse()\n  .map((size) => {\n    return `.textSize-${size.number} {\n  font-size: var(${size.name});\n  line-height: var(--globalLineHeight);\n}\n`\n  }).join('')\n}`}\n        </code>\n      </CodeContainer>\n    </CodeBackdrop>\n    \n  </React.Fragment>\n  )\n}\n\nexport default CodeGetter","import React, { useState } from 'react';\nimport './App.css';\nimport Input from './input';\nimport styled from 'styled-components';\nimport CodeGetter from './code-getter';\nimport { getFontSizes } from './utilities';\n\nconst SettingTitle = styled.div`\n  opacity: 0.5;\n  font-size: var(--dpl-fs-1);\n  margin: 0 0 0.5rem 0;\n`\n\nconst LogoSection = styled.div`\n  margin: auto 0 0.5rem 0;\n`\n\nconst Logo = styled.h1`\n  font-weight: normal;\n  opacity: 0.5;\n  font-size: var(--dpl-fs-2);\n  margin: 1.5rem 0 0.5rem 0;\n\n  &:hover {\n    opacity: 1;\n    color: hsl(var(--c-accentHSL));\n  }\n`\n\nconst LogoLink = styled.a`\n  color: inherit;\n  text-decoration: none;\n`\n\nconst GlobalContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n  max-height: 100vh;\n`\n\nconst SettingsSection = styled.div`\n  width: calc(3vw + 15rem);\n  min-width: 15rem;\n  flex-shrink: 0;\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n  position: relative;\n  height: 100vh;\n  max-height: 100%;\n  display: flex;\n  align-items: flex-start;\n  overflow: auto;\n\n  @media (max-width: 800px) {\n    position: fixed;\n    width: 80vw;\n    \n\n    &:active {\n      z-index: 2;\n    }\n    &:hover {\n      z-index: 2;\n      background-color: var(--background);\n      box-shadow: 80vw 0 var(--backdrop);\n    }\n  }\n`\n\nconst MainSettings = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  overflow: auto;\n  padding: var(--pagePaddingY) var(--pagePaddingX);\n`\n\nconst PreviewSettings = styled.div`\n  width: 2rem;\n  flex-shrink: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  flex-shrink: 0;\n  padding: var(--pagePaddingY) 0;\n  \n  @media (max-width: 800px) {\n    width: 4rem;\n  }\n`\n\nconst MainSection = styled.div`\n  flex-grow: 1;\n  padding: 5vw var(--pagePaddingX);\n  background-color: var(--background);\n  position: relative;\n  overflow: auto;\n\n  @media (max-width: 800px) {\n    width: 80vw;\n    position: fixed;\n    right: 0;\n    box-shadow: -80vw 0 var(--backdrop);\n    height: 100%;\n  }\n`\n\nconst DemoText = styled.div`\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 800px) {\n    pointer-events: none;\n  }\n`\n\nconst FontFamilyInput = styled.input`\n  font: inherit;\n  padding: 0;\n  background-color: white;\n  border: none;\n  color: inherit;\n  max-width: 100%;\n  height: calc(1.2 * 1em);\n  background-color: transparent;\n\n  &:hover {\n    color: hsla(var(--c-accentHSL), 1);\n  }\n  &:focus {\n    outline: none;\n    color: hsla(var(--c-accentHSL), 1);\n  }\n  &::-moz-selection {\n    background-color: hsla(var(--c-accentHSL), 1);\n    color: hsla(var(--c-accentHS), 93%, 1);\n  }\n  &::selection {\n    background-color: hsla(var(--c-accentHSL), 1);\n    color: hsla(var(--c-accentHS), 93%, 1);\n  }\n`\n\nconst Letter = styled.button`\n  font: inherit;\n  padding: 0;\n  color: hsla(var(--c-accentH), 20%, 60%, 1);\n  background-color: var(--overlay);\n  border: none;\n  width: 1.25rem;\n  height: 1.25rem;\n  font-family: ${props => props.variant === \"serif\" ? 'georgia' : 'arial'};\n  font-size: 3rem;\n  border-radius: 1.5rem;\n  margin-right: 0.25rem;\n  overflow: hidden;\n  position: relative;\n  cursor: pointer;\n\n  &:hover {\n    color: hsla(var(--c-accentHSL), 1);\n  }\n  &:focus {\n    outline: none;\n    color: hsla(var(--c-accentHSL), 1);\n  }\n\n  &:after {\n    content: 'i';\n    display: block;\n    position: absolute;\n    bottom: -0.7rem;\n    left: ${props => props.variant === \"serif\" ? '0.2rem' : '0.3rem'};\n  }\n`\n\nconst Link = styled.a`\n  color: inherit;\n  text-decoration-color: hsla(var(--c-accentHS), 20%, 0.3);\n  text-underline-position: under;\n\n  &:hover {\n    color: hsl(var(--c-accentHSL));\n    text-decoration-color: hsla(var(--c-accentHSL), 0.5);\n  }\n`\n\nconst DarkThemeButton = styled.button`\n  appearance: none;\n  cursor: pointer;\n  width: 2rem;\n  height: 2rem;\n  border-radius: 2rem;\n  background-color: var(--body);\n  border: none;\n\n  &:focus {\n    outline: none;\n    background-color: hsl(var(--c-accentHSL));\n  }\n`\n\nconst LightThemeButton = styled.button`\n  appearance: none;\n  cursor: pointer;\n  width: 2rem;\n  height: 2rem;\n  border-radius: 2rem;\n  background-color: transparent;\n  border: 1px solid var(--body);\n\n  &:focus {\n    outline: none;\n    border-color: hsl(var(--c-accentHSL));\n  }\n`\n\nconst ContentButtonWrapper = styled.button`\n  appearance: none;\n  cursor: pointer;\n  width: 2rem;\n  height: 2rem;\n  border: none;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color: transparent;\n  \n  &:focus {\n    outline: none;\n\n    &  > * {\n      background-color: hsl(var(--c-accentHSL));\n    }\n  }\n\n  & > * {\n    background-color: var(--body);\n  }\n`\n\nconst ContentButtonLine = styled.span`\n  width: 2rem;\n`\n\nconst ContentButton = ({...props}) => (\n  <ContentButtonWrapper {...props}>\n    <ContentButtonLine style={{ height: 8, marginBottom: 4 }} />\n    <ContentButtonLine style={{ height: 5, width: 24, marginBottom: 3 }} />\n    <ContentButtonLine style={{ height: 2, width: 16 }} />\n  </ContentButtonWrapper>\n)\n\nconst SpecsButtonWrapper = styled.button`\n  appearance: none;\n  cursor: pointer;\n  width: 2rem;\n  height: 2rem;\n  padding: 0;\n  border: none;\n  display: flex;\n  align-items: flex-start;\n  position: relative;\n  background-color: transparent;\n  color: var(--body);\n  \n  &:focus {\n    outline: none;\n\n    &  > * {\n      color: hsl(var(--c-accentHSL));\n    }\n  }\n\n  & > * {\n    border-color: var(--body);\n  }\n`\n\nconst SpecsButtonLine = styled.span`\n  width: 1rem;\n  height: 2rem;\n  border: 1px solid currentColor;\n  border-width: 1px 0 1px 0;\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 8px;\n`\n\nconst SpecsButtonSquare = styled.span`\n  width: 1rem;\n  height: 1rem;\n  border: 1px solid currentColor;\n  display: block;\n  position: absolute;\n  top: 8px;\n  left: 8px;\n`\n\nconst SpecsButton = ({...props}) => (\n  <SpecsButtonWrapper {...props}>\n    <SpecsButtonSquare />\n    <SpecsButtonLine />\n    <SpecsButtonLine style={{ transform: 'rotate(90deg)', left: 8, top: 0 }} />\n  </SpecsButtonWrapper>\n)\n\nconst text = {\n  l: `A pattern produced by the bug's shaking would be a series of concentric circles. These circles would reach the edges of the water puddle at the same frequency.`,\n  s: `Aa Bb Cc 123`\n};\n\nfunction App() {\n  const [sizesAmount, setSizesAmount] = useState(5);\n  const [sizesIncrement, setSizesIncrement] = useState(1.3);\n  const [baseFontSize, setBaseFontSize] = useState(0.9);\n  const [lineHeightBase, setLineHeightBase] = useState(0.25);\n  const [lineHeightRelativity, setLineHeightRelativity] = useState(1);\n  const [fontFamily, setFontFamily] = useState('system-ui');\n  \n  const [theme, setTheme] = useState('light');\n  const [showSpecs, setShowSpecs] = useState(true);\n  const [longContent, setLongContent] = useState(true);\n\n  document.documentElement.style.setProperty(`--fontSize-0`, `baseFontSizerem`);\n\n  getFontSizes(sizesAmount, baseFontSize, sizesIncrement).map(size => {\n    document.documentElement.style.setProperty(size.name, size.value);\n  });\n\n  getFontSizes(sizesAmount, baseFontSize, sizesIncrement);\n\n  const bodyClassList = document.body.classList\n\n  if(theme === 'light') {\n    bodyClassList.add(`theme-light`);\n    bodyClassList.remove(`theme-dark`);\n  }\n  if(theme === 'dark') {\n    bodyClassList.add(`theme-dark`);\n    bodyClassList.remove(`theme-light`);\n  }\n\n  return (\n    <div>\n      <GlobalContainer>\n        <SettingsSection>\n          <MainSettings>\n            <SettingTitle>Line Height</SettingTitle>\n            <Input\n              type=\"number\"\n              onChange={e => setLineHeightBase(e.target.value)}\n              onBlur={e => setLineHeightBase(e.target.value > 0 ? e.target.value : 1)}\n              value={lineHeightBase}\n              label=\"Fixed value\"\n              step=\".01\"\n              sufix=\"rem\"\n            />\n            <Input\n              type=\"number\"\n              onChange={e => setLineHeightRelativity(e.target.value)}\n              onBlur={e => setLineHeightRelativity(e.target.value > 0 ? e.target.value : 1)}\n              value={lineHeightRelativity}\n              label=\"Relative value\"\n              step=\".01\"\n              sufix=\"em\"\n            />\n            \n            <SettingTitle\n              style={{\n                marginTop: '0.5rem'\n              }}\n            >\n              Font\n            </SettingTitle>\n            <Input\n              type=\"number\"\n              onChange={e => setSizesAmount(e.target.value)}\n              onBlur={e => setSizesAmount(e.target.value > 0 ? e.target.value : 1)}\n              value={sizesAmount}\n              label=\"Amount\"\n            />\n            <Input\n              type=\"number\"\n              onChange={e => setSizesIncrement(e.target.value)}\n              onBlur={e => setSizesIncrement(e.target.value > 0 ? e.target.value : 1)}\n              value={sizesIncrement}\n              label=\"Increment\"\n              step=\".01\"\n            />\n            <Input\n              type=\"number\"\n              onChange={e => setBaseFontSize(e.target.value)}\n              onBlur={e => setBaseFontSize(e.target.value > 0 ? e.target.value : 1)}\n              value={baseFontSize}\n              label=\"Base\"\n              step=\".01\"\n              sufix=\"rem\"\n            />\n            <label>Font Family</label>\n            <FontFamilyInput\n              label=\"Base\"\n              type=\"text\"\n              onChange={e => setFontFamily(e.target.value)}\n              onBlur={e => setFontFamily(e.target.value === '' ? 'system-ui' : e.target.value )}\n              value={fontFamily}\n              spellCheck=\"false\"\n              style={{\n                fontSize: `\n                  ${fontFamily.length > 13 ? '1.5rem' : 'var(--dpl-fs-2)'}\n                `\n              }}\n            />\n\n            <div style={{ display: 'flex', marginTop: '0.5rem' }}>\n              <Letter variant=\"serif\" onClick={() => setFontFamily('georgia')} />\n              <Letter onClick={() => setFontFamily('system-ui')} />\n            </div>\n            \n            <div style={{ marginTop: '2rem' }} />\n\n            <CodeGetter\n              lineHeightBase={lineHeightBase}\n              lineHeightRelativity={lineHeightRelativity}\n              sizesIncrement={sizesIncrement}\n              sizesAmount={sizesAmount}\n              baseFontSize={baseFontSize}\n              fontFamily={fontFamily}\n            />\n\n            <LogoSection>\n              <Logo>\n                <LogoLink href=\"/\">doppler</LogoLink>\n              </Logo>\n              <Link href=\"https://hayk.design\" target=\"_blank\">by Hayk</Link> | <Link href=\"https://github.com/hihayk/doppler\" target=\"_blank\">Github</Link>\n            </LogoSection>\n          </MainSettings>\n          <PreviewSettings>\n            <DarkThemeButton onClick={() => setTheme('dark')}/>\n            <div style={{ marginTop: '0.5rem' }} />\n            <LightThemeButton onClick={() => setTheme('light')} />\n            {/* <div style={{ marginTop: '2rem' }} />\n            <ContentButton onClick={() => setLongContent(!longContent)} /> */}\n            <div style={{ marginTop: '2rem' }} />\n            <SpecsButton onClick={() => setShowSpecs(!showSpecs)} />\n          </PreviewSettings>\n        </SettingsSection>\n\n        <MainSection>\n          {getFontSizes(sizesAmount, baseFontSize, sizesIncrement)\n            .reverse()\n            .map((size, index) => {\n              return (\n                <div key={index}>\n                  {showSpecs && (\n                    <div>\n                      <span>{size.computedFS}px / {Math.round(lineHeightBase * 16 + lineHeightRelativity * size.computedFS)}px</span>\n                      <span className=\"dimmed\"> | {size.value}</span>\n                    </div>\n                  )}\n\n                  <DemoText\n                    contentEditable\n                    spellcheck=\"false\"\n                    data-gramm_editor=\"false\"\n                    suppressContentEditableWarning\n                    style={{\n                      fontSize: `var(${size.name})`,\n                      lineHeight: `calc(${lineHeightBase}rem + ${lineHeightRelativity}em)`,\n                      maxWidth: \"24em\",\n                      marginTop: \"0.5rem\",\n                      marginBottom: \"1.25rem\",\n                      fontFamily: fontFamily,\n                    }}\n                  >\n                    {longContent ? text.l : text.s}\n                  </DemoText>\n                </div>\n              )\n            })}\n          </MainSection>\n        </GlobalContainer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}