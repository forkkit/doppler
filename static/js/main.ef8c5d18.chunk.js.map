{"version":3,"sources":["input.js","utilities.js","code-getter.js","App.js","serviceWorker.js","index.js"],"names":["InputWrapper","styled","div","InputField","input","props","isDisabled","InputValue","InputLabel","label","InputRoot","Helper","span","Input","value","placeholder","onChange","color","prefix","sufix","withRgbSlider","min","max","helper","rest","style","position","htmlFor","display","type","readOnly","tabIndex","getFontSizes","amount","base","increment","fontSizes","getName","inc","i","name","number","computedFS","Math","round","pow","document","documentElement","setProperty","CodeContainer","pre","Button","button","CodeBackdrop","CodeGetter","lineHeightFixedAmount","lineHeightRelativeAmount","sizesIncrement","sizesAmount","baseFontSize","fontFamily","useState","isOpen","setIsOpen","Fragment","onClick","e","stopPropagation","reverse","map","size","join","SettingTitle","LogoSection","Logo","h1","LogoLink","a","GlobalContainer","SettingsSection","MainSettings","PreviewSettings","MainSection","DemoText","FontFamilyInput","Letter","variant","Link","DarkThemeButton","LightThemeButton","SpecsButtonWrapper","SpecsButtonLine","SpecsButtonSquare","HelpButtonSection","SpecsButton","transform","left","top","text","l","s","App","setSizesAmount","setSizesIncrement","setBaseFontSize","setlineHeightFixedAmount","setlineHeightRelativeAmount","setFontFamily","theme","setTheme","showSpecs","setShowSpecs","longContent","helpIsVisible","setHelpIsVisible","bodyClassList","body","classList","add","remove","width","target","onBlur","step","marginTop","spellCheck","fontSize","length","backgroundColor","href","opacity","index","key","className","contentEditable","spellcheck","data-gramm_editor","suppressContentEditableWarning","lineHeight","maxWidth","marginBottom","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef8c5d18.chunk.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\n\nconst InputWrapper = styled.div`\n  position: relative;\n  width: auto;\n  height: 100%;\n`\n\nconst InputField = styled.input`\n  color: inherit;\n  font-size: var(--dpl-fs-2);\n  font-family: inherit;\n  font-weight: inherit;\n  line-height: 1;\n  padding: 0;\n  border: 0;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  height: 100%;\n  background-color: transparent;\n  appearance: textfield;\n  margin: 0;\n  min-width: 0.25rem;\n  ${props => props.isDisabled && `\n    user-select: none;\n    opacity: 0.4;\n    pointer-events: none;\n  `};\n  &:hover {\n    color: hsla(var(--c-accentHSL), 1);\n  }\n  &:focus {\n    outline: none;\n    color: hsla(var(--c-accentHSL), 1);\n  }\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  &::-moz-selection {\n    background-color: hsla(var(--c-accentHSL), 1);\n    color: hsla(var(--c-accentHS), 93%, 1);\n  }\n  &::selection {\n    background-color: hsla(var(--c-accentHSL), 1);\n    color: hsla(var(--c-accentHS), 93%, 1);\n  }\n`\n\nconst InputValue = styled.div`\n  font-size: var(--dpl-fs-2);\n  font-weight: inherit;\n  line-height: 1;\n  opacity: 0;\n  transform: translateY(236px) scale(0);\n`\n\nconst InputLabel = styled.label`\n  margin-bottom: 0.1rem;\n  display: block;\n`\n\nconst InputRoot = styled.div`\n  display: flex;\n  margin: 0 0 0.8rem 0;\n  height: var(--dpl-fs-2);\n`\n\nconst Helper = styled.span`\n  position: absolute;\n  left: 9rem;\n  width: 20rem;\n  padding-left: 2rem;\n  top: 0;\n\n  &:before {\n    content: '';\n    width: 1rem;\n    height: 1px;\n    background-color: currentColor;\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0.7em;\n  }\n`\n\nconst Input = ({\n  value,\n  placeholder,\n  onChange,\n  color,\n  prefix,\n  sufix,\n  withRgbSlider,\n  label,\n  min,\n  max,\n  helper,\n  ...rest\n}) => {\n  return (\n    <div style={{ position: \"relative\" }}>\n      <InputLabel htmlFor={label}>\n        {label}\n      </InputLabel>\n\n      \n      <Helper style={{display: !helper && 'none' }}>{helper}</Helper>\n      \n\n      <InputRoot>\n        <InputWrapper color={color}>\n          <InputField color={color} value={prefix} placeholder={placeholder} type='text' readOnly isDisabled tabIndex={-1} />\n          <InputValue>\n            {prefix}\n          </InputValue>\n        </InputWrapper>\n\n        <InputWrapper color={color}>\n          <InputField color={color} value={value} placeholder={placeholder} onChange={onChange} {...rest} min={min} max={max} />\n          <InputValue>\n            {value}\n          </InputValue>\n        </InputWrapper>\n\n        <InputWrapper color={color}>\n          <InputField color={color} value={sufix} placeholder={placeholder} type='text' readOnly isDisabled tabIndex={-1} />\n          <InputValue>\n            {sufix}\n          </InputValue>\n        </InputWrapper>\n      </InputRoot>\n    </div>\n  )\n}\n\nexport default Input","export const getFontSizes = (amount, base, increment) => {\n  let fontSizes = [];\n\n  const getName = inc => {\n    return `fontSize-${inc}`;\n  };\n\n  for (var i = 1; i < amount; i++) {\n    fontSizes[i] = {\n      name: `--${getName(i)}`,\n      value: `calc(var(--${getName(i - 1)}) * var(--sizesIncrement))`,\n      number: i,\n      computedFS: Math.round(base * Math.pow(increment, i) * 16)\n    };\n  }\n\n\n  fontSizes[0] = {\n    name: `--${getName(0)}`,\n    value: `${base}rem`,\n    number: 0,\n    computedFS: Math.round(base * 16)\n  };\n\n  document.documentElement.style.setProperty('--sizesIncrement', increment);\n  \n  return fontSizes;\n};","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { getFontSizes } from './utilities'\n\nconst lineBreak = `\n`\n\nconst CodeContainer = styled.pre`\n  background-color: var(--background);\n  padding: var(--pagePaddingX);\n  overflow: auto;\n  max-height: 100%;\n`\n\nexport const Button = styled.button`\n  appearance: none;\n  font: inherit;\n  color: inherit;\n  border: 1px solid hsla(var(--c-accentH), 40%, 40%, 0.5);\n  padding: 0.5rem 0.75rem;\n  cursor: pointer;\n  background-color: transparent;\n\n  &:focus {\n    border-color: hsla(var(--c-accentHSL), 1);\n    color: hsla(var(--c-accentHSL), 1);\n    outline: none;\n  }\n`\n\nconst CodeBackdrop = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 100;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  padding: var(--pagePaddingY) var(--pagePaddingX);\n  background-color: var(--backdrop);\n\n  @media (max-width: 800px) {\n    padding: 0;\n    padding-top: 40vw;\n  }\n`\n\nconst CodeGetter = ({lineHeightFixedAmount, lineHeightRelativeAmount, sizesIncrement, sizesAmount, baseFontSize, fontFamily}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <React.Fragment>\n      <Button onClick={() => setIsOpen(!isOpen)}>Get the CSS</Button>\n      \n      \n      <CodeBackdrop\n        style={{ display: `${isOpen ? 'flex' : 'none'}` }}\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <CodeContainer onClick={(e) => e.stopPropagation()}>\n          <code>\n              {`:root {\n  --lineHeightFixedAmount: ${lineHeightFixedAmount}rem;\n  --lineHeightRelativeAmount: ${lineHeightRelativeAmount}em;\n  --sizesIncrement: ${sizesIncrement};\n\n${getFontSizes(sizesAmount, baseFontSize, sizesIncrement)\n    .reverse()\n    .map((size) => {\n      return `  ${size.name}: ${size.value}; ${lineBreak}`\n    }).join('')}\n  --globalLineHeight: calc(var(--lineHeightFixedAmount) + var(--lineHeightRelativeAmount));\n  --globalFontSize: var(--fontSize-0);\n  --globalFontFamily: ${fontFamily};\n}\n* {\n  line-height: var(--globalLineHeight);\n}\nhtml {\n  font-size: 100%;\n}\nbody {\n  font-size: var(--globalFontSize);\n  font-family: var(--globalFontFamily);\n}\n${getFontSizes(sizesAmount, baseFontSize, sizesIncrement)\n  .reverse()\n  .map((size) => {\n    return `.textSize-${size.number} {\n  font-size: var(${size.name});\n}\n`\n  }).join('')\n}`}\n        </code>\n      </CodeContainer>\n    </CodeBackdrop>\n    \n  </React.Fragment>\n  )\n}\n\nexport default CodeGetter","import React, { useState } from 'react';\nimport './App.css';\nimport Input from './input';\nimport styled from '@emotion/styled';\nimport CodeGetter, { Button } from './code-getter';\nimport { getFontSizes } from './utilities';\n\nconst SettingTitle = styled.div`\n  opacity: 0.5;\n  font-size: var(--dpl-fs-1);\n  margin: 0 0 0.5rem 0;\n`\n\nconst LogoSection = styled.div`\n  margin: auto 0 0.5rem 0;\n`\n\nconst Logo = styled.h1`\n  font-weight: 400;\n  font-size: var(--dpl-fs-2);\n  margin: 1.5rem 0 0.5rem 0;\n\n  &:hover {\n    opacity: 1;\n    color: hsl(var(--c-accentHSL));\n  }\n`\n\nconst LogoLink = styled.a`\n  color: inherit;\n  text-decoration: none;\n`\n\nconst GlobalContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n  max-height: 100vh;\n`\n\nconst SettingsSection = styled.div`\n  width: calc(3vw + 15rem);\n  min-width: 15rem;\n  flex-shrink: 0;\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n  position: relative;\n  height: 100vh;\n  max-height: 100%;\n  display: flex;\n  align-items: flex-start;\n  overflow: auto;\n\n  @media (max-width: 800px) {\n    position: fixed;\n    width: 80vw;\n    \n\n    &:active {\n      z-index: 2;\n    }\n    &:hover {\n      z-index: 2;\n      background-color: var(--background);\n      box-shadow: 80vw 0 var(--backdrop);\n    }\n  }\n`\n\nconst MainSettings = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  overflow: auto;\n  padding: var(--pagePaddingY) var(--pagePaddingX);\n`\n\nconst PreviewSettings = styled.div`\n  width: 2rem;\n  flex-shrink: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  flex-shrink: 0;\n  padding: var(--pagePaddingY) 0;\n  \n  @media (max-width: 800px) {\n    width: 4rem;\n  }\n`\n\nconst MainSection = styled.div`\n  flex-grow: 1;\n  padding: 5vw var(--pagePaddingX);\n  background-color: var(--background);\n  position: relative;\n  overflow: auto;\n\n  @media (max-width: 800px) {\n    width: 80vw;\n    position: fixed;\n    right: 0;\n    box-shadow: -80vw 0 var(--backdrop);\n    height: 100%;\n  }\n`\n\nconst DemoText = styled.div`\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 800px) {\n    pointer-events: none;\n  }\n`\n\nconst FontFamilyInput = styled.input`\n  font: inherit;\n  padding: 0;\n  background-color: white;\n  border: none;\n  color: inherit;\n  max-width: 100%;\n  height: calc(1.2 * 1em);\n  background-color: transparent;\n\n  &:hover {\n    color: hsla(var(--c-accentHSL), 1);\n  }\n  &:focus {\n    outline: none;\n    color: hsla(var(--c-accentHSL), 1);\n  }\n  &::-moz-selection {\n    background-color: hsla(var(--c-accentHSL), 1);\n    color: hsla(var(--c-accentHS), 93%, 1);\n  }\n  &::selection {\n    background-color: hsla(var(--c-accentHSL), 1);\n    color: hsla(var(--c-accentHS), 93%, 1);\n  }\n`\n\nconst Letter = styled.button`\n  font: inherit;\n  padding: 0;\n  color: hsla(var(--c-accentH), 20%, 60%, 1);\n  background-color: var(--overlay);\n  border: none;\n  width: 1.25rem;\n  height: 1.25rem;\n  font-family: ${props => props.variant === \"serif\" ? 'georgia' : 'arial'};\n  font-size: 3rem;\n  border-radius: 1.5rem;\n  margin-right: 0.25rem;\n  overflow: hidden;\n  position: relative;\n  cursor: pointer;\n\n  &:hover {\n    color: hsla(var(--c-accentHSL), 1);\n  }\n  &:focus {\n    outline: none;\n    color: hsla(var(--c-accentHSL), 1);\n  }\n\n  &:after {\n    content: 'i';\n    display: block;\n    position: absolute;\n    bottom: -0.7rem;\n    left: ${props => props.variant === \"serif\" ? '0.2rem' : '0.3rem'};\n  }\n`\n\nconst Link = styled.a`\n  color: inherit;\n  text-decoration-color: hsla(var(--c-accentHS), 20%, 0.3);\n  text-underline-position: under;\n\n  &:hover {\n    color: hsl(var(--c-accentHSL));\n    text-decoration-color: hsla(var(--c-accentHSL), 0.5);\n  }\n`\n\nconst DarkThemeButton = styled.button`\n  appearance: none;\n  cursor: pointer;\n  width: 2rem;\n  height: 2rem;\n  border-radius: 2rem;\n  background-color: var(--body);\n  border: none;\n\n  &:focus {\n    outline: none;\n    background-color: hsl(var(--c-accentHSL));\n  }\n`\n\nconst LightThemeButton = styled.button`\n  appearance: none;\n  cursor: pointer;\n  width: 2rem;\n  height: 2rem;\n  border-radius: 2rem;\n  background-color: transparent;\n  border: 1px solid var(--body);\n\n  &:focus {\n    outline: none;\n    border-color: hsl(var(--c-accentHSL));\n  }\n`\n\nconst ContentButtonWrapper = styled.button`\n  appearance: none;\n  cursor: pointer;\n  width: 2rem;\n  height: 2rem;\n  border: none;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color: transparent;\n  \n  &:focus {\n    outline: none;\n\n    &  > * {\n      background-color: hsl(var(--c-accentHSL));\n    }\n  }\n\n  & > * {\n    background-color: var(--body);\n  }\n`\n\nconst ContentButtonLine = styled.span`\n  width: 2rem;\n`\n\nconst ContentButton = ({...props}) => (\n  <ContentButtonWrapper {...props}>\n    <ContentButtonLine style={{ height: 8, marginBottom: 4 }} />\n    <ContentButtonLine style={{ height: 5, width: 24, marginBottom: 3 }} />\n    <ContentButtonLine style={{ height: 2, width: 16 }} />\n  </ContentButtonWrapper>\n)\n\nconst SpecsButtonWrapper = styled.button`\n  appearance: none;\n  cursor: pointer;\n  width: 2rem;\n  height: 2rem;\n  padding: 0;\n  border: none;\n  display: flex;\n  align-items: flex-start;\n  position: relative;\n  background-color: transparent;\n  color: var(--body);\n  \n  &:focus {\n    outline: none;\n\n    &  > * {\n      color: hsl(var(--c-accentHSL));\n    }\n  }\n\n  & > * {\n    border-color: var(--body);\n  }\n`\n\nconst SpecsButtonLine = styled.span`\n  width: 1rem;\n  height: 2rem;\n  border: 1px solid currentColor;\n  border-width: 1px 0 1px 0;\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 8px;\n`\n\nconst SpecsButtonSquare = styled.span`\n  width: 1rem;\n  height: 1rem;\n  border: 1px solid currentColor;\n  display: block;\n  position: absolute;\n  top: 8px;\n  left: 8px;\n`\n\nconst HelpButtonSection = styled.span`\n  @media (max-width: 800px) {\n    display: none;\n  }\n`\n\nconst SpecsButton = ({...props}) => (\n  <SpecsButtonWrapper {...props}>\n    <SpecsButtonSquare />\n    <SpecsButtonLine />\n    <SpecsButtonLine style={{ transform: 'rotate(90deg)', left: 8, top: 0 }} />\n  </SpecsButtonWrapper>\n)\n\nconst text = {\n  l: `A pattern produced by the bug's shaking would be a series of concentric circles. These circles would reach the edges of the water puddle at the same frequency.`,\n  s: `Aa Bb Cc 123`\n};\n\nfunction App() {\n  const [sizesAmount, setSizesAmount] = useState(5);\n  const [sizesIncrement, setSizesIncrement] = useState(1.3);\n  const [baseFontSize, setBaseFontSize] = useState(0.9);\n  const [lineHeightFixedAmount, setlineHeightFixedAmount] = useState(0.25);\n  const [lineHeightRelativeAmount, setlineHeightRelativeAmount] = useState(1);\n  const [fontFamily, setFontFamily] = useState('system-ui');\n  \n  const [theme, setTheme] = useState('light');\n  const [showSpecs, setShowSpecs] = useState(true);\n  const [longContent, setLongContent] = useState(true);\n  \n  const [helpIsVisible, setHelpIsVisible] = useState(false);\n\n  document.documentElement.style.setProperty(`--fontSize-0`, `baseFontSizerem`);\n\n  getFontSizes(sizesAmount, baseFontSize, sizesIncrement).map(size => {\n    document.documentElement.style.setProperty(size.name, size.value);\n  });\n\n  getFontSizes(sizesAmount, baseFontSize, sizesIncrement);\n\n  const bodyClassList = document.body.classList\n\n  if(theme === 'light') {\n    bodyClassList.add(`theme-light`);\n    bodyClassList.remove(`theme-dark`);\n  }\n  if(theme === 'dark') {\n    bodyClassList.add(`theme-dark`);\n    bodyClassList.remove(`theme-light`);\n  }\n\n  return (\n    <div>\n      <GlobalContainer>\n        <SettingsSection\n          style={{ width: helpIsVisible && '40rem' }}\n        >\n          <MainSettings>\n            <SettingTitle>Line Height</SettingTitle>\n            <Input\n              type=\"number\"\n              onChange={e => setlineHeightFixedAmount(e.target.value)}\n              onBlur={e => setlineHeightFixedAmount(e.target.value > 0 ? e.target.value : 0)}\n              value={lineHeightFixedAmount}\n              label=\"Fixed amount\"\n              step=\".01\"\n              sufix=\"rem\"\n              helper={helpIsVisible && \"This value is fixed: 1rem = 16px. This value will add a fixed ampout to the line height.\"}\n            />\n            <Input\n              type=\"number\"\n              onChange={e => setlineHeightRelativeAmount(e.target.value)}\n              onBlur={e => setlineHeightRelativeAmount(e.target.value > 0 ? e.target.value : 0)}\n              value={lineHeightRelativeAmount}\n              label=\"Relative amount\"\n              step=\".01\"\n              sufix=\"em\"\n              helper={helpIsVisible && \"This value is relative to the font size: 1em = current font size. For example if the font size is 10px, 1em line height will result in 10px, and 1.5em will result in 15px. Use this value to control how drastic is the line height change.\"}\n            />\n            \n            <SettingTitle\n              style={{\n                marginTop: '0.5rem'\n              }}\n            >\n              Font\n            </SettingTitle>\n            <Input\n              type=\"number\"\n              onChange={e => setSizesAmount(e.target.value)}\n              onBlur={e => setSizesAmount(e.target.value > 0 ? e.target.value : 1)}\n              value={sizesAmount}\n              label=\"Sizes amount\"\n              helper={helpIsVisible && \"The amount of font sizes.\"}\n            />\n            <Input\n              type=\"number\"\n              onChange={e => setSizesIncrement(e.target.value)}\n              onBlur={e => setSizesIncrement(e.target.value > 0 ? e.target.value : 1)}\n              value={sizesIncrement}\n              label=\"Step increment\"\n              step=\".01\"\n              helper={helpIsVisible && \"The amount of increment in each font size step.\"}\n            />\n            <Input\n              type=\"number\"\n              onChange={e => setBaseFontSize(e.target.value)}\n              onBlur={e => setBaseFontSize(e.target.value > 0 ? e.target.value : 1)}\n              value={baseFontSize}\n              label=\"Base font size\"\n              step=\".01\"\n              sufix=\"rem\"\n              helper={helpIsVisible && \"The size of the smallest font size in the scale.\"}\n            />\n            <label>Font family</label>\n            <FontFamilyInput\n              label=\"Base\"\n              type=\"text\"\n              onChange={e => setFontFamily(e.target.value)}\n              onBlur={e => setFontFamily(e.target.value === '' ? 'system-ui' : e.target.value )}\n              value={fontFamily}\n              spellCheck=\"false\"\n              style={{\n                fontSize: `\n                  ${fontFamily.length > 13 ? '1.5rem' : 'var(--dpl-fs-2)'}\n                `\n              }}\n            />\n\n            <div style={{ display: 'flex', marginTop: '0.5rem' }}>\n              <Letter variant=\"serif\" onClick={() => setFontFamily('georgia')} />\n              <Letter onClick={() => setFontFamily('system-ui')} />\n            </div>\n            \n            <div style={{ marginTop: '2rem' }} />\n\n            <CodeGetter\n              lineHeightFixedAmount={lineHeightFixedAmount}\n              lineHeightRelativeAmount={lineHeightRelativeAmount}\n              sizesIncrement={sizesIncrement}\n              sizesAmount={sizesAmount}\n              baseFontSize={baseFontSize}\n              fontFamily={fontFamily}\n            />\n\n            <div style={{ marginTop: '0.5rem' }} />\n            \n            <HelpButtonSection>\n              <Button\n                onClick={() => setHelpIsVisible(!helpIsVisible)}\n                style={{\n                  backgroundColor: helpIsVisible && 'hsl(var(--c-accentHSL))',\n                  color: helpIsVisible && 'hsl(var(--c-accentHS), 98%)',\n                }}\n                >\n                ¯\\_(ツ)_/¯\n              </Button>\n            </HelpButtonSection>\n\n            <LogoSection>\n              <Logo>\n                <LogoLink href=\"https://hihayk.github.io/doppler\">doppler</LogoLink>\n                <span style={{ opacity: 0 }}>—</span>\n              </Logo>\n              <Link href=\"https://hayk.design\" target=\"_blank\">by Hayk</Link> | <Link href=\"https://github.com/hihayk/doppler\" target=\"_blank\">Github</Link>\n            </LogoSection>\n          </MainSettings>\n          <PreviewSettings>\n            <DarkThemeButton onClick={() => setTheme('dark')}/>\n            <div style={{ marginTop: '0.5rem' }} />\n            <LightThemeButton onClick={() => setTheme('light')} />\n            {/* <div style={{ marginTop: '2rem' }} />\n            <ContentButton onClick={() => setLongContent(!longContent)} /> */}\n            <div style={{ marginTop: '2rem' }} />\n            <SpecsButton onClick={() => setShowSpecs(!showSpecs)} />\n          </PreviewSettings>\n        </SettingsSection>\n\n        <MainSection>\n          {getFontSizes(sizesAmount, baseFontSize, sizesIncrement)\n            .reverse()\n            .map((size, index) => {\n              return (\n                <div key={index}>\n                  {showSpecs && (\n                    <div>\n                      <span>{size.computedFS}px / {Math.round(lineHeightFixedAmount * 16 + lineHeightRelativeAmount * size.computedFS)}px</span>\n                      <span className=\"dimmed\"> | {size.value}</span>\n                    </div>\n                  )}\n\n                  <DemoText\n                    contentEditable\n                    spellcheck=\"false\"\n                    data-gramm_editor=\"false\"\n                    suppressContentEditableWarning\n                    style={{\n                      fontSize: `var(${size.name})`,\n                      lineHeight: `calc(${lineHeightFixedAmount}rem + ${lineHeightRelativeAmount}em)`,\n                      maxWidth: \"24em\",\n                      marginTop: \"0.5rem\",\n                      marginBottom: \"1.25rem\",\n                      fontFamily: fontFamily,\n                    }}\n                  >\n                    {longContent ? text.l : text.s}\n                  </DemoText>\n                </div>\n              )\n            })}\n          </MainSection>\n        </GlobalContainer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}